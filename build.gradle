import org.codehaus.groovy.runtime.GStringImpl

buildscript{
    ext{
        mindustryVersion = 'v141'
    }
    repositories{
        mavenLocal()
        mavenCentral()
        google()
        maven{ url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven{ url 'https://jitpack.io' }
    }
    dependencies{
        classpath "com.github.Anuken.MindustryJitpack:core:$mindustryVersion"
        classpath "com.github.Anuken.Mindustry:tools:v135"
        classpath "com.github.Anuken.Arc:arc-core:$mindustryVersion"
        classpath "com.github.Anuken.Arc:packer:$mindustryVersion"
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'com.github.TheEE145'
version = '1.0'

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

repositories {
    mavenCentral()

    maven {
        url 'https://www.jitpack.io'
    }
}

ext {
    appTag = "v141"
    mindustry = "com.github.Anuken.MindustryJitpack:core:$appTag" as GStringImpl
    arc = "com.github.Anuken.Arc:arc-core:$appTag" as GStringImpl
}

dependencies {
    compileOnly "$mindustry"
    compileOnly "$arc"

    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.jetbrains:annotations:23.0.0'

    testImplementation "$mindustry"
    testImplementation "$arc"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    annotationProcessor "com.github.Anuken:jabel:93fde537c7"
}

configurations.configureEach {
    resolutionStrategy.eachDependency { details ->
        if(details.requested.group == 'com.github.Anuken.Arc'){
            details.useVersion "$appTag"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs += ["-Xlint:deprecation"]

    options.forkOptions.jvmArgs.addAll([
            '--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED',
            '--add-opens=java.base/sun.reflect.annotation=ALL-UNNAMED'
    ])
}

sourceSets {
    main {
        resources.srcDirs = []
        java.srcDirs = ['src/main']
    }

    test {
        resources.srcDirs = []
        java.srcDirs = ['src/test']
    }
}

java {
	withSourcesJar()
	withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
		    from components.java
        }
    }
}

wrapper {
    gradleVersion = "7.3.3"
    distributionType = Wrapper.DistributionType.ALL
}